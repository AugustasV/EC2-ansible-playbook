#Create new instance for weatherapp
---
  - hosts: localhost
    connection: local
    gather_facts: False

    vars:
      key_name: id_rsa
      region: eu-central-1
      image: ami-0b418580298265d5c 
      id: "weather-app"
      instance_type: t2.micro
      sec_group: "{{ id }}-sec"
      ec2_access_key: "{{ec2_access_key}}"
      ec2_secret_key: "{{ec2_secret_key}}"
    vars_files:
      - group_vars/all/keys.yml
    tasks:

      - name: Get instances facts
        ec2_instance_info:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{ region }}"
        register: result

      - name: Upload public key to AWS
        ec2_key:
          name: "{{ key_name }}"
          key_material: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"

      - name: Create security group
        ec2_group:
          name: "{{ sec_group }}"
          description: "Sec group for app {{ id }}"
          # vpc_id: 12345
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          rules:
            - proto: tcp
              ports: 
              - 22
              - 8000
              - 9000
              cidr_ip: 0.0.0.0/0
      - name: Launch the new EC2 Instance. It can take some time.
        ec2_instance:
          name: "Weather app instance"
          aws_access_key: "{{ ec2_access_key }}"
          aws_secret_key: "{{ ec2_secret_key }}"
          instance_type: "{{ instance_type }}"
          security_group: "{{ sec_group }}"
          network:
            assign_public_ip: true
          image_id: "{{ image }}"
          wait: true
          region: "{{ region }}"
          key_name: "{{ key_name }}"
        register: ec2         

      - name: Adding instance to hosts file so we can connect later
        add_host:
          name: "{{ name }}"
          groups: all
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: weatherapp
      - name: Wait for SSH to come up
        wait_for:
          host: "{{ item.network.assign_public_ip }}" 
          port: 22 
          state: started 
        with_items: "{{ ec2.instances }}"
      #- import_playbook: ansible.yml
